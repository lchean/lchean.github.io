{"version":3,"sources":["components/P.tsx","utils/index.tsx","components/A.tsx","components/BtnClipboard.tsx","components/App.tsx","index.tsx"],"names":["P","children","colors","underlinedLink","css","A","href","BtnClipboard","feedback","clipboardText","type","className","data-clipboard-text","EMAIL","App","ClipboardJS","on","e","btn","trigger","clearSelection","classList","add","setTimeout","remove","this","handleClipboard","white","black","styles","React","Component","ReactDOM","render","document","getElementById"],"mappings":"0RAaeA,EANqB,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OAAkB,2BAAIA,I,koBCNnD,IAOMC,EACJ,UADIA,EAEJ,OAGIC,EAAiBC,YAAH,KCSZC,EAXqB,SAAC,GAAD,IAAGJ,EAAH,EAAGA,SAAUK,EAAb,EAAaA,KAAb,OAClC,iBAAGF,IAAKD,EAAgBG,KAAMA,GAC3BL,I,mYCDL,IA8BeM,EA9BgC,SAAC,GAAD,IAAGN,EAAH,EAAGA,SAAUO,EAAb,EAAaA,SAAUC,EAAvB,EAAuBA,cAAvB,OAC7C,sBAAQC,KAAK,SAASN,IAAKD,EAAgBQ,UAAU,eAAeC,sBAAqBH,GACvF,oBACEL,IAAKA,YAAF,IFdoB,cE6BtBI,GAEFP,I,q5BCrBL,IAAMY,EAAQ,yBAGOC,E,gLAEC,IAAIC,IAJL,iBAMPC,GAAG,WAAW,SAACC,GAAO,IACbC,EAAwBD,EAAjCE,QAAcC,EAAmBH,EAAnBG,eAEtBF,EAAIG,UAAUC,IHpBS,aGqBvBC,YAAW,kBAAML,EAAIG,UAAUG,OHrBR,eGqB+B,KACtDJ,S,0CAKFK,KAAKC,oB,+BAGG,IACAC,EAAiBzB,EAAV0B,EAAU1B,EAEzB,OACE,oBACEE,IAAKA,YAAF,MASH,YAAC,IAAD,CACEyB,OAAQzB,YAAF,IAMkBuB,EACXC,KAIf,uBACExB,IAAKA,YAAF,MAIH,kBACEA,IAAKA,YAAF,MADL,SAWA,YAAC,EAAD,qDAC+C,YAAC,EAAD,CAAGE,KAAK,2BAAR,qBAD/C,KAIA,YAAC,EAAD,mEACkE,YAAC,EAAD,CAAGA,KAAK,wBAAR,UADlE,MAC+G,IAC7G,YAAC,EAAD,CAAGA,KAAK,8BAAR,cAFF,uBAE0E,IACxE,YAAC,EAAD,CAAGA,KAAK,+BAAR,eAHF,qBAG0E,IACxE,YAAC,EAAD,CAAGA,KAAK,6BAAR,aAJF,KAOA,YAAC,EAAD,uHAKA,YAAC,EAAD,kEAC4D,YAAC,EAAD,CAAGA,KAAI,iBAAYO,IAAnB,YAD5D,WAC6G,IAC3G,YAAC,EAAD,CAAGP,KAAK,uDAAR,oBAFF,SAE2F,IACzF,YAAC,EAAD,CAAcE,SAAS,iBAAiBC,cAAeI,GAAvD,4BAHF,W,GA3EuBiB,IAAMC,W,YCPvCC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.59b0c143.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\nimport React, { FunctionComponent } from 'react'\n\ntype Props = {\n  children: React.ReactNode\n}\n\nconst P: FunctionComponent<Props> = ({ children }) => <p>{children}</p>\n\nP.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default P\n","import { css } from '@emotion/core'\nexport const isCopiedClass = 'is-copied'\n\ntype TColors = {\n  white: string\n  black: string\n}\n\nexport const colors: TColors = {\n  white: '#fefefe',\n  black: '#222',\n}\n\nexport const underlinedLink = css`\n  position: relative;\n  padding: 0;\n  color: inherit;\n  text-decoration: none;\n  font-style: italic;\n  outline: none;\n  border: 0;\n  cursor: pointer;\n  letter-spacing: inherit;\n\n  &:focus,\n  &:hover {\n    &::after {\n      transform: scaleX(1);\n      transform-origin: bottom left;\n    }\n  }\n\n  &::after {\n    content: '';\n    position: absolute;\n    right: 0;\n    left: 0;\n    bottom: 0;\n    height: 1px;\n    background-color: #222;\n    transform: scaleX(0);\n    transform-origin: bottom right;\n    transition: transform 0.25s ease-out;\n  }\n`\n","/** @jsx jsx */\nimport React, { FunctionComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport { jsx } from '@emotion/core'\nimport { underlinedLink } from '../utils'\n\ntype Props = {\n  children: React.ReactNode\n  href: string\n}\n\nconst A: FunctionComponent<Props> = ({ children, href }) => (\n  <a css={underlinedLink} href={href}>\n    {children}\n  </a>\n)\n\nA.propTypes = {\n  children: PropTypes.node.isRequired,\n  href: PropTypes.string.isRequired,\n}\n\nexport default A\n","/** @jsx jsx */\nimport React, { FunctionComponent } from 'react'\nimport { jsx, css } from '@emotion/core'\nimport PropTypes from 'prop-types'\nimport { isCopiedClass, underlinedLink } from '../utils'\n\ntype Props = {\n  children: React.ReactNode\n  feedback: string\n  clipboardText: string\n}\n\nconst BtnClipboard: FunctionComponent<Props> = ({ children, feedback, clipboardText }) => (\n  <button type=\"button\" css={underlinedLink} className=\"js-clipboard\" data-clipboard-text={clipboardText}>\n    <span\n      css={css`\n        position: absolute;\n        right: 0;\n        bottom: -2em;\n        left: 0;\n        transform: scaleY(0);\n        transform-origin: bottom left;\n        transition: transform 0.25s ease-out;\n\n        .${isCopiedClass} & {\n          transform: scaleY(1);\n          transform-origin: top left;\n        }\n      `}\n    >\n      {feedback}\n    </span>\n    {children}\n  </button>\n)\n\nBtnClipboard.propTypes = {\n  children: PropTypes.node.isRequired,\n  feedback: PropTypes.string.isRequired,\n  clipboardText: PropTypes.string.isRequired,\n}\n\nexport default BtnClipboard\n","import React from 'react'\nimport ClipboardJS from 'clipboard'\n/** @jsx jsx */\nimport { jsx, css, Global } from '@emotion/core'\n\nimport P from './P'\nimport A from './A'\nimport BtnClipboard from './BtnClipboard'\n\nimport { isCopiedClass, colors } from '../utils'\n\nconst EMAIL = 'laurentchean@gmail.com'\nconst CLIPBOARD_ID = '.js-clipboard'\n\nexport default class App extends React.Component {\n  handleClipboard(): void {\n    const clipboard = new ClipboardJS(CLIPBOARD_ID)\n\n    clipboard.on('success', (e) => {\n      const { trigger: btn, clearSelection } = e\n\n      btn.classList.add(isCopiedClass)\n      setTimeout(() => btn.classList.remove(isCopiedClass), 2000)\n      clearSelection()\n    })\n  }\n\n  componentDidMount(): void {\n    this.handleClipboard()\n  }\n\n  render() {\n    const { white, black } = colors\n\n    return (\n      <main\n        css={css`\n          display: flex;\n          align-items: center;\n          max-width: 700px;\n          height: 100vh;\n          margin-right: auto;\n          margin-left: auto;\n        `}\n      >\n        <Global\n          styles={css`\n            body {\n              font-family: 'EB Garamond', serif;\n              font-size: 1em;\n              line-height: 1.6;\n              letter-spacing: 0.0625em;\n              background-color: ${white};\n              color: ${black};\n            }\n          `}\n        />\n        <article\n          css={css`\n            padding: 2rem;\n          `}\n        >\n          <h1\n            css={css`\n              margin-top: 0;\n              margin-bottom: 0.75em;\n              font-size: 1.25rem;\n              font-weight: 400;\n            `}\n          >\n            Hey !\n          </h1>\n\n          <P>\n            I am a french front end developer working at <A href=\"https://www.emakina.nl/\">Emakina Amsterdam</A>.\n          </P>\n\n          <P>\n            Since 2012, I&apos;ve been working for digital agencies such as <A href=\"http://marcelww.com/\">Marcel</A> or{' '}\n            <A href=\"https://www.mrm-mccann.fr/\">Mrm McCann</A> and for brands like{' '}\n            <A href=\"https://www.thekooples.com/\">The Kooples</A> and more recently{' '}\n            <A href=\"https://www.mobhotel.com/\">MOB Hotel</A>.\n          </P>\n\n          <P>\n            As a user interface developer, I try to deliver a clean code and be creative without forgetting\n            accessibility.\n          </P>\n\n          <P>\n            I am available for freelance. You can contact me with : a <A href={`mailto:${EMAIL}`}>mail app</A>, via my{' '}\n            <A href=\"https://www.linkedin.com/in/laurent-chean-b045465b/\">Linkedin profile</A> or by{' '}\n            <BtnClipboard feedback=\"Email copied !\" clipboardText={EMAIL}>\n              copying my email address\n            </BtnClipboard>\n            .\n          </P>\n        </article>\n      </main>\n    )\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './components/App'\n\nimport 'normalize.css'\nimport './styles/global.scss'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}