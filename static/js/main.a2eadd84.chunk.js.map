{"version":3,"sources":["components/P.js","utils/index.js","components/A.js","components/BtnClipboard.js","components/App.js","index.js"],"names":["P","props","children","colors","underlinedLink","css","A","href","feedback","clipboardText","type","className","data-clipboard-text","EMAIL","App","ClipboardJS","on","e","btn","trigger","classList","add","setTimeout","remove","clearSelection","this","handleClipboard","white","black","styles","React","Component","ReactDOM","render","document","getElementById"],"mappings":"kSAEe,SAASA,EAAGC,GAAQ,IACzBC,EAAaD,EAAbC,SAER,OACE,2BAAKA,G,iqBCJF,IAEMC,EACJ,UADIA,EAEJ,OAGIC,EAAiBC,YAAH,KCLZ,SAASC,EAAGL,GAAQ,IACzBC,EAAmBD,EAAnBC,SAAUK,EAASN,EAATM,KAElB,OACE,iBAAGF,IAAKD,EAAgBG,KAAMA,GAAQL,G,0WCJ3B,SAASF,EAAGC,GAAQ,IACzBC,EAAsCD,EAAtCC,SAAUM,EAA4BP,EAA5BO,SAAUC,EAAkBR,EAAlBQ,cAE5B,OACE,sBAAQC,KAAK,SAAUL,IAAKD,EAAgBO,UAAU,eAAeC,sBAAqBH,GACxF,oBAAMJ,IAAKA,YAAF,IFPc,cEoBrBG,GACDN,G,i4BCZP,IAAMW,EAAQ,yBAGOC,E,0LAEG,IAAIC,IAJP,iBAMLC,GAAG,WAAW,SAACC,GAAO,IACZC,EAAOD,EAAhBE,QAEPD,EAAIE,UAAUC,IHnBK,aGoBnBC,YAAW,kBAAOJ,EAAIE,UAAUG,OHpBb,eGoBoC,KACvDN,EAAEO,sB,0CAKRC,KAAKC,oB,+BAGI,IACDC,EAAiBxB,EAAVyB,EAAUzB,EAEzB,OACE,oBAAME,IAAKA,YAAF,MAQP,YAAC,IAAD,CACEwB,OAAQxB,YAAF,IAMkBsB,EACXC,KAIf,uBAASvB,IAAKA,YAAF,MAGR,kBAAIA,IAAKA,YAAF,MAAP,SAOA,YAACL,EAAD,qDAAgD,YAACM,EAAD,CAAGC,KAAK,2BAAR,qBAAhD,KAEA,YAACP,EAAD,mEAA8D,YAACM,EAAD,CAAGC,KAAK,wBAAR,UAA9D,OAA2G,YAACD,EAAD,CAAGC,KAAK,8BAAR,cAA3G,wBAAmL,YAACD,EAAD,CAAGC,KAAK,+BAAR,eAAnL,sBAA2P,YAACD,EAAD,CAAGC,KAAK,6BAAR,aAA3P,KAEA,YAACP,EAAD,yHAEA,YAACA,EAAD,kEAA6D,YAACM,EAAD,CAAGC,KAAI,iBAAYM,IAAnB,YAA7D,YAA8G,YAACP,EAAD,CAAGC,KAAK,uDAAR,oBAA9G,UAAuM,YAAC,EAAD,CAAcC,SAAS,iBAAiBG,UAAU,eAAeF,cAAeI,GAAhF,4BAAvM,W,GAzDqBiB,IAAMC,W,YCPvCC,IAASC,OACL,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.a2eadd84.chunk.js","sourcesContent":["import React from 'react'\n\nexport default function P (props) {\n  const { children } = props\n\n  return (\n    <p>{ children }</p>\n  )\n}","/** @jsx jsx */\nimport { jsx, css } from '@emotion/core'\nexport const isCopiedClass = 'is-copied'\n\nexport const colors = {\n  white: '#fefefe',\n  black: '#222',\n}\n\nexport const underlinedLink = css`\n  position: relative;\n  padding: 0;\n  color: inherit;\n  text-decoration: none;\n  font-style: italic;\n  outline: none;\n  border: 0;\n  cursor: pointer;\n  letter-spacing: inherit;\n\n  &:focus,\n  &:hover {\n      &::after {\n          transform: scaleX(1);\n          transform-origin: bottom left;\n      }\n  }\n\n  &::after {\n      content: '';\n      position: absolute;\n      right: 0;\n      left: 0;\n      bottom: 0;\n      height: 1px;\n      background-color: #222;\n      transform: scaleX(0);\n      transform-origin: bottom right;\n      transition: transform .25s ease-out;\n  }\n`\n","/** @jsx jsx */\nimport { jsx } from '@emotion/core'\nimport { underlinedLink } from '../utils'\n\nexport default function A (props) {\n  const { children, href } = props\n\n  return (\n    <a css={underlinedLink} href={href}>{ children }</a>\n  )\n}","/** @jsx jsx */\nimport { jsx, css } from '@emotion/core'\nimport { isCopiedClass, underlinedLink } from '../utils'\n\nexport default function P (props) {\n  const { children, feedback, clipboardText } = props\n\n  return (\n    <button type=\"button\"  css={underlinedLink} className=\"js-clipboard\" data-clipboard-text={clipboardText}>\n      <span css={css`\n      position: absolute;\n      right: 0;\n      bottom: -2em;\n      left: 0;\n      transform: scaleY(0);\n      transform-origin: bottom left;\n      transition: transform .25s ease-out;\n\n      .${isCopiedClass} & {\n        transform: scaleY(1);\n        transform-origin: top left;\n      }\n    `}>{feedback}</span>\n      {children}\n    </button>\n  )\n}","import React from 'react'\nimport ClipboardJS from 'clipboard'\n/** @jsx jsx */\nimport { jsx, css, Global } from '@emotion/core'\n\nimport P from './P'\nimport A from './A'\nimport BtnClipboard from './BtnClipboard'\n\nimport { isCopiedClass, colors } from '../utils'\n\nconst EMAIL = 'laurentchean@gmail.com'\nconst CLIPBOARD_ID = '.js-clipboard'\n\nexport default class App extends React.Component {\n  handleClipboard() {\n      const clipboard = new ClipboardJS(CLIPBOARD_ID);\n\n      clipboard.on('success', (e) => {\n          const {trigger: btn} = e\n\n          btn.classList.add(isCopiedClass)\n          setTimeout(() =>  btn.classList.remove(isCopiedClass), 2000)\n          e.clearSelection()\n      })\n  }\n\n  componentDidMount() {\n    this.handleClipboard();\n  }\n\n  render () {\n    const { white, black } = colors;\n\n    return (\n      <main css={css`\n        display: flex;\n        align-items: center;\n        max-width: 700px;\n        height: 100vh;\n        margin-right: auto;\n        margin-left: auto;\n      `}>\n        <Global\n          styles={css`\n            body {\n              font-family: 'EB Garamond', serif;\n              font-size: 1em;\n              line-height: 1.6;\n              letter-spacing: .0625em;\n              background-color: ${white};\n              color: ${black};\n            }\n          `}\n        />\n        <article css={css`\n          padding: 2rem;\n        `}>\n            <h1 css={css`\n              margin-top: 0;\n              margin-bottom: .75em;\n              font-size: 1.25rem;\n              font-weight: 400;\n            `}>Hey !</h1>\n\n            <P>I am a french front end developer working at <A href=\"https://www.emakina.nl/\">Emakina Amsterdam</A>.</P>\n\n            <P>Since 2012, I've been working for digital agencies such as <A href=\"http://marcelww.com/\">Marcel</A> or <A href=\"https://www.mrm-mccann.fr/\">Mrm McCann</A> and for brands like <A href=\"https://www.thekooples.com/\">The Kooples</A> and more recently <A href=\"https://www.mobhotel.com/\">MOB Hotel</A>.</P>\n\n            <P>As a user interface developer, I try to deliver a 'clean' code and be creative without forgetting accessibility.</P>\n\n            <P>I am available for freelance. You can contact me with : a <A href={`mailto:${EMAIL}`}>mail app</A>, via my <A href=\"https://www.linkedin.com/in/laurent-chean-b045465b/\">Linkedin profile</A> or by <BtnClipboard feedback=\"Email copied !\" className=\"js-clipboard\" clipboardText={EMAIL}>copying my email address</BtnClipboard>.</P>\n        </article>\n      </main>\n    )\n  }\n}","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './components/App'\n\nimport 'normalize.css'\n import './styles/global.scss'\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n)\n"],"sourceRoot":""}